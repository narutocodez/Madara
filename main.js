const ms=require('ms');const Discord=require('discord.js');const db=require('quick.db');const client=new Discord.Client({restTimeOffset: 0});const embed=new Discord.MessageEmbed();const Madara=require('./server/Madara.js');client.commands=new Discord.Collection();client.events=new Discord.Collection();['command_handler', 'event_handler'].forEach(handler =>{require(`./handlers/${handler}`)(client, Discord);});client.login(process.env.TOKEN);client.on('message', async message => {if(!message.member.hasPermission("ADMINISTRATOR")){let link = ["discord.gg","discord.com/invite","discordapp.com/invite","https://","http://","https:/","http:/","https:","http:","pornhub.com","xnxx.com","brazzers.com"];if (link.some(word => message.content.toLowerCase().includes(word))){await message.delete();return message.channel.send(`You cannot send any links in Madara's Longue for security/safety reasons!`).then(m.delete({timeout: 10000}))}}});client.on('guildMemberAdd',guildMember=>{guild=client.guilds.cache.get("860211377368203315");voicechannel=guild.channels.cache.get("864145952876134462");voicechannel.setName(`Members : ${guild.memberCount}`);let welcomeRole=guildMember.guild.roles.cache.find(role=>role.name === 'members');guildMember.roles.add(welcomeRole); guildMember.guild.channels.cache.get('860254738414043166').send(`**Welcome <@${guildMember.user.id}> to Madara's server! We are happy to have you with us, in here can you do all types of stuff in Madara's server, for an example study, game, chill and meme! Also make sure to be up to date by checking <#860264540074410034>, <#860261135009448006> and <#860264624767369226>!**`);});client.on('guildMemberRemove',member =>{guild=client.guilds.cache.get("860211377368203315");voicechannel=guild.channels.cache.get("864145952876134462");voicechannel.setName(`Members : ${guild.memberCount}`)});const DisTube=require('distube'),config={prefix: "-",};const distube = new DisTube(client, { searchSongs: true, emitNewSongOnly: true });client.on("message", async (message)=>{if (message.author.bot) return;if (!message.content.startsWith(config.prefix)) return;const args=message.content.slice(config.prefix.length).trim().split(/ +/g);const command=args.shift();if (command == "play");distube.play(message, args.join(" "));if (["loop"].includes(command))distube.setRepeatMode(message,parseInt(args[0]));if (command == "stop"){distube.stop(message);message.channel.send("Stopped the music!");};if (command == "skip")distube.skip(message);if (command == "queue"){let queue = distube.getQueue(message);message.channel.send('Current queue:\n' + queue.songs.map((song, id) =>`**${id + 1}**. ${song.name} - \`${song.formattedDuration}\``).slice(0, 10).join("\n"));}});const status=(queue) => `Volume: \`${queue.volume}%\` | Autoplay: \`${queue.autoplay ? "On" : "Off"}\``;distube.on("playSong",(message,queue,song)=>message.channel.send(`Playing \`${song.name}\` - \`${song.formattedDuration}\`\nRequested by: ${song.user}\n${status(queue)}`)).on("addSong",(message,queue,song)=>message.channel.send(`Added ${song.name} - \`${song.formattedDuration}\` to the queue by ${song.user}`)).on("playList",(message,queue,playlist,song)=>message.channel.send(`Play \`${playlist.name}\` playlist (${playlist.songs.length} songs).\nRequested by: ${song.user}\nNow playing \`${song.name}\` - \`${song.formattedDuration}\`\n${status(queue)}`)).on("addList",(message,queue,playlist)=>message.channel.send(`Added \`${playlist.name}\` playlist (${playlist.songs.length} songs) to queue\n${status(queue)}`)).on("searchResult",(message,result)=>{let i=0;message.channel.send(`**Choose an option from below**\n${result.map(song => `**${++i}**. ${song.name} - \`${song.formattedDuration}\``).join("\n")}\n*Enter anything else or wait 60 seconds to cancel*`);}).on("searchCancel",(message)=>message.channel.send(`Searching canceled`)).on("error",(message,e)=>{console.error(e);message.channel.send("An error encountered: " + e);});